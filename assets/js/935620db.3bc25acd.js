"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2062],{7563:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=t(4848),a=t(8453);const o={},r=void 0,c={id:"unipd/Automata/introduction",title:"introduction",description:"Sep\uff1aintroduction of automata",source:"@site/docs/unipd/Automata/introduction.md",sourceDirName:"unipd/Automata",slug:"/unipd/Automata/introduction",permalink:"/docs/unipd/Automata/introduction",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"notebooksSidebar",previous:{title:"Computer Engineering",permalink:"/docs/category/computer-engineering"},next:{title:"Lecture",permalink:"/docs/unipd/Concurrent Programming/Lecture"}},s={},l=[{value:"Sep\uff1aintroduction of automata",id:"sepintroduction-of-automata",level:2},{value:"October Week 1:",id:"october-week-1",level:2},{value:"chapter 2, beginning of chapter 3:   DFA NFA Regular language",id:"chapter-2-beginning-of-chapter-3---dfa-nfa-regular-language",level:3}];function d(n){const e={h2:"h2",h3:"h3",li:"li",ul:"ul",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"sepintroduction-of-automata",children:"Sep\uff1aintroduction of automata"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"what is automata?\r\ntransition of states"}),"\n",(0,i.jsx)(e.li,{children:"why to study automata\r\nto understand what is computable and what is not"}),"\n",(0,i.jsx)(e.li,{children:"what can automata do\r\ncompiler to check whether a language can be accepted\r\nmodels such as on/off, vending machine, state machines\r\nadvanced application like language model, natural language model."}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"october-week-1",children:"October Week 1:"}),"\n",(0,i.jsx)(e.h3,{id:"chapter-2-beginning-of-chapter-3---dfa-nfa-regular-language",children:"chapter 2, beginning of chapter 3:   DFA NFA Regular language"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"how to define a Language that can be recognized by a NFA or DFA"}),"\n",(0,i.jsxs)(e.li,{children:["induction, using the base and induction","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"before starting, to understand how to start the induction, usually it is the length of the w=xa, a here is the constant that is defined"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["how to express a NFA and DFA","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"graph"}),"\n",(0,i.jsx)(e.li,{children:"using definition"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["relationship between NFA and DFA","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"NFA = DFA + other NFA , and a DFA is a NFA, a NFA can be a DFA"}),"\n",(0,i.jsxs)(e.li,{children:["a typical example, a langauge can be recognized by a NFA, if and only if it could be recognized by DFA, how to proof this?","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"part 1: if a language can be recognized by DFA, it can be recognized by a NFA, BY prooving that a DFA is a NFA. which is obvious from the definition and construction of them."}),"\n",(0,i.jsx)(e.li,{children:"part 2: only if a language can be recognized by a DFA, it can be recognized by a NFA, by prooving every NFA can be converted into an equivalent DFA. so the direction from NFA to DFA is correct."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"regular language"}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>c});var i=t(6540);const a={},o=i.createContext(a);function r(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);